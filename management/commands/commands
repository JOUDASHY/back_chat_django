import time
from django.core.management.base import BaseCommand
from django.db import connections
from django.db.utils import OperationalError

class Command(BaseCommand):
    def handle(self, *args, **options):
        self.stdout.write('Waiting for database...')
        max_retries = 30
        retry_count = 0
        
        while retry_count < max_retries:
            try:
                conn = connections['default']
                conn.ensure_connection()
                # Verify tables are imported
                with conn.cursor() as cursor:
                    cursor.execute("SHOW TABLES")
                    tables = cursor.fetchall()
                    if tables:
                        self.stdout.write(self.style.SUCCESS('Database ready with tables!'))
                        return
                time.sleep(2)
            except OperationalError as e:
                retry_count += 1
                self.stdout.write(f'Attempt {retry_count}/{max_retries}: {str(e)}')
                time.sleep(2)
        
        self.stdout.write(self.style.ERROR('Database connection failed after retries'))
        exit(1)
